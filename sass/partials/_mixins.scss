@mixin filter-gradient($start-color, $end-color, $orientation: vertical) {
  @include has-layout;
  $gradient-type: if($orientation == vertical, 0, 1);
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8 or $legacy-support-for-ie9 {
    filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}');
  }
}
@mixin v-gradient($start-color, $end-color, $orientation: vertical){
  @include background-image(linear-gradient($start-color, $end-color));
  @include filter-gradient($start-color, $end-color,$orientation);
}
@mixin h-gradient($start-color, $end-color, $orientation: horizontal){
  @include background-image(linear-gradient(left, $start-color, $end-color ));
  @include filter-gradient($start-color, $end-color,$orientation);
}

@function em($target, $context: $base-font-size) {
  @if $context == 0 { $context: 1px}
  @if $target == 0 { @return 0 }
  @return $target / $context + 0em;
}

@mixin placeholder-color($color) {
  &.placeholder {
    color: $color;
  }
  :-ms-input-placeholder {
    color: $color;
  }
  &:-moz-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  &::-webkit-input-placeholder {
    color: $color;
  }
}


@mixin spr-m($map, $ico) {
  background: sprite($map, $ico) no-repeat;
  @include sprite-dimensions($map, $ico);
}

@mixin spr($map, $ico) {
  @include images-sprite($ico);
  height: images-sprite-height($ico);
  width: images-sprite-width($ico);
}

@mixin grad($grad) {
  @include background-image($grad);
  -pie-background: $grad;
  background: -ms-#{$grad};
}

@mixin h-line-height($h) {
  height: $h;
  line-height: $h;
}
@mixin background-cover($img) {
  @include background-size(cover);

  .lt-ie9 & {
    filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=#{$img},sizingMethod='scale');

    -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{$img}',sizingMethod='scale')";
  }
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
  /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin image-2x-custom($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
  /* on retina, use image that's scaled by 2 */
    background: url($image) transparent no-repeat scroll 0 0;
    background-size: $width $height;
  }
}


@mixin image-2x-only-size($width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
  /* on retina, use image that's scaled by 2 */
    background-size: $width $height;
  }
}